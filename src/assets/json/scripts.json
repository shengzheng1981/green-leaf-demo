[
  {
    "title": "Basic",
    "open": true,
    "items": [
      {
        "title": "Basic",
        "selected": true,
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const symbol = new Green.SimplePointSymbol();\n    const point = new Green.Point(new Green.LatLng(39.909186, 116.397411));\n    const graphic = new Green.Graphic(point, symbol);\n    //添加单个图形\n    map.addGraphic(graphic);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Polyline",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const lineSymbol = new Green.SimpleLineSymbol();\n    //添加线\n    const polyline = new Green.Polyline([\n      new Green.LatLng(39.959186, 116.347411),\n      new Green.LatLng(39.859186, 116.447411),\n    ]);\n    const graphic = new Green.Graphic(polyline, lineSymbol);\n    map.addGraphic(graphic);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Polygon",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const fillSymbol = new Green.SimpleFillSymbol();\n    //添加面\n    const polygon = new Green.Polygon([\n      [\n        new Green.LatLng(39.859186, 116.347411),\n        new Green.LatLng(39.959186, 116.347411),\n        new Green.LatLng(39.959186, 116.447411),\n        new Green.LatLng(39.859186, 116.447411),\n      ],\n    ]);\n    const graphic = new Green.Graphic(polygon, fillSymbol);\n    map.addGraphic(graphic);\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Layer",
    "items": [
      {
        "title": "Graphic Layer",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //设置渲染符号\n    const symbol = new Green.SimplePointSymbol();\n    //新建图形图层\n    const layer = new Green.GraphicLayer();\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const graphic = new Green.Graphic(point, symbol);\n      layer.addGraphic(graphic);\n    }\n    //添加图形图层\n    map.addGraphicLayer(layer);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Feature Layer",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer = new Green.FeatureLayer();\n    layer.featureClass = featureClass;\n    //设置渲染方式——单一渲染\n    const renderer = new Green.SimpleRenderer();\n    //设置渲染符号\n    const symbol = new Green.SimplePointSymbol();\n    symbol.strokeStyle = '#3388FF';\n    symbol.fillStyle = '#3388FF80';\n    renderer.symbol = symbol;\n    layer.renderer = renderer;\n\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer);\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Renderer",
    "items": [
      {
        "title": "Simple Renderer",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer = new Green.FeatureLayer();\n    layer.featureClass = featureClass;\n    //设置渲染方式——单一渲染\n    const renderer = new Green.SimpleRenderer();\n    //设置渲染符号\n    const symbol = new Green.SimplePointSymbol();\n    symbol.strokeStyle = '#3388FF';\n    symbol.fillStyle = '#3388FF80';\n    renderer.symbol = symbol;\n    layer.renderer = renderer;\n\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Category Renderer",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer = new Green.FeatureLayer();\n    layer.featureClass = featureClass;\n\n    //设置渲染符号\n    const symbol2 = new Green.SimplePointSymbol();\n    symbol2.strokeStyle = '#3388FF';\n    symbol2.fillStyle = '#3388FF80';\n    const symbol3 = new Green.SimplePointSymbol();\n    symbol3.strokeStyle = '#88FF33';\n    symbol3.fillStyle = '#88FF3380';\n    const symbol4 = new Green.SimplePointSymbol();\n    symbol4.strokeStyle = '#FF8833';\n    symbol4.fillStyle = '#FF883380';\n    //设置渲染方式——分类渲染\n    layer.renderer = new Green.CategoryRenderer();\n    layer.renderer.field = field;\n    layer.renderer.items.push(new Green.CategoryRendererItem(2, symbol2));\n    layer.renderer.items.push(new Green.CategoryRendererItem(3, symbol3));\n    layer.renderer.items.push(new Green.CategoryRendererItem(4, symbol4));\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Class Renderer",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer = new Green.FeatureLayer();\n    layer.featureClass = featureClass;\n\n    //设置渲染符号\n    const symbol2 = new Green.SimplePointSymbol();\n    symbol2.strokeStyle = '#3388FF';\n    symbol2.fillStyle = '#3388FF80';\n    const symbol3 = new Green.SimplePointSymbol();\n    symbol3.strokeStyle = '#88FF33';\n    symbol3.fillStyle = '#88FF3380';\n    const symbol4 = new Green.SimplePointSymbol();\n    symbol4.strokeStyle = '#FF8833';\n    symbol4.fillStyle = '#FF883380';\n    //设置渲染方式——分级渲染\n    layer.renderer = new Green.ClassRenderer();\n    layer.renderer.field = field;\n    layer.renderer.items.push(new Green.ClassRendererItem(0, 3, symbol2));\n    layer.renderer.items.push(new Green.ClassRendererItem(4, 6, symbol3));\n    layer.renderer.items.push(new Green.ClassRendererItem(7, 10, symbol4));\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer);\n\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Dot Renderer",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer = new Green.FeatureLayer();\n    layer.featureClass = featureClass;\n\n    //设置渲染符号\n    const symbol2 = new Green.SimplePointSymbol();\n    symbol2.strokeStyle = '#3388FF';\n    symbol2.fillStyle = '#3388FF80';\n\n    //设置渲染方式——分类渲染\n    const renderer = new Green.DotRenderer();\n    renderer.field = field;\n    renderer.symbol = symbol2;\n    layer.renderer = renderer;\n\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer);\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Label",
    "items": [
      {
        "title": "Null Collision",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n   //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer2 = new Green.FeatureLayer();\n    layer2.featureClass = featureClass;\n    //设置渲染方式——单一渲染\n    const renderer = new Green.SimpleRenderer();\n    renderer.symbol = new Green.SimplePointSymbol();\n    layer2.renderer = renderer;\n    //设置图层标记\n    const label = new Green.Label();\n    label.collision = new Green.NullCollision();\n    label.field = field;\n    layer2.label = label;\n    layer2.labeled = true;\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer2);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Distance Collision",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n   //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer2 = new Green.FeatureLayer();\n    layer2.featureClass = featureClass;\n    //设置渲染方式——单一渲染\n    const renderer = new Green.SimpleRenderer();\n    renderer.symbol = new Green.SimplePointSymbol();\n    layer2.renderer = renderer;\n    //设置图层标记\n    const label = new Green.Label();\n    label.field = field;\n    layer2.label = label;\n    layer2.labeled = true;\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer2);\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Cluster",
    "items": [
      {
        "title": "Cluster",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer = new Green.FeatureLayer();\n    layer.featureClass = featureClass;\n    //设置渲染方式——聚合渲染\n    const renderer = new Green.ClusterRenderer();\n    renderer.featureClass = featureClass;\n    //设置渲染符号\n    const symbol = new Green.SimplePointSymbol();\n    symbol.strokeStyle = '#3388FF';\n    symbol.fillStyle = '#3388FF80';\n    renderer.defaultSymbol = symbol;\n    layer.renderer = renderer;\n\n    //生成随机数据\n    for (let i = 1; i <= 20000; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: parseInt(Math.random() * 10) });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer);\n\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Symbol",
    "items": [
      {
        "title": "Point Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const symbol = new Green.SimplePointSymbol();\n    const point = new Green.Point(new Green.LatLng(39.909186, 116.397411));\n    const graphic = new Green.Graphic(point, symbol);\n    //添加单个图形\n    map.addGraphic(graphic);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Marker Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //设置渲染符号\n    const symbol2 = new Green.SimpleMarkerSymbol();\n    symbol2.url =\n      'https://raw.githubusercontent.com/shengzheng1981/green-leaf/master/demo/assets/images/marker.svg';\n    symbol2.load().then(\n      (value) => {\n        //新建图形图层\n        const layer = new Green.GraphicLayer();\n        //生成随机数据\n        for (let i = 1; i <= 200; i++) {\n          const point = new Green.Point(\n            new Green.LatLng(\n              39.409186 + Math.random() * 1,\n              115.897411 + Math.random() * 1\n            )\n          );\n          const graphic = new Green.Graphic(point, symbol2);\n          layer.addGraphic(graphic);\n        }\n        //添加图形图层\n        map.addGraphicLayer(layer);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Shape Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建图形图层\n    const layer = new Green.GraphicLayer();\n    //生成随机数据\n    for (let i = 1; i <= 100; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      //设置渲染符号\n      const symbol2 = new Green.ShapeSymbol();\n      symbol2.sides = Math.floor(Math.random() * 6 + 3);\n      const graphic = new Green.Graphic(point, symbol2);\n      layer.addGraphic(graphic);\n    }\n    //添加图形图层\n    map.addGraphicLayer(layer);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Letter Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    //新建图形图层\n    const layer = new Green.GraphicLayer();\n    //生成随机数据\n    for (let i = 1; i <= 200; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      //设置渲染符号\n      const symbol2 = new Green.LetterSymbol();\n      symbol2.fillStyle = '#ffffff';\n      symbol2.letter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n      const graphic = new Green.Graphic(point, symbol2);\n      layer.addGraphic(graphic);\n    }\n    //添加图形图层\n    map.addGraphicLayer(layer);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Line Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const lineSymbol = new Green.SimpleLineSymbol();\n    //添加线\n    const polyline = new Green.Polyline([\n      new Green.LatLng(39.959186, 116.347411),\n      new Green.LatLng(39.859186, 116.447411),\n    ]);\n    const graphic = new Green.Graphic(polyline, lineSymbol);\n    map.addGraphic(graphic);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Arrow Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const lineSymbol = new Green.ArrowSymbol();\n    //生成随机数据\n    for (let i = 1; i <= 20; i++) {\n      const polyline = new Green.Polyline([new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1), new Green.LatLng(39.409186 + Math.random() * 1, 115.807411 + Math.random() * 1)]);\n      const graphic = new Green.Graphic(polyline, lineSymbol);\n      map.addGraphic(graphic);\n    }\n\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Alternate Line Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const lineSymbol = new Green.AlternateLineSymbol();\n    lineSymbol.color1 = '#000000';\n    lineSymbol.color2 = '#ffffff';\n    lineSymbol.alternate = 10;\n    //生成随机数据\n    for (let i = 1; i <= 10; i++) {\n      const polyline = new Green.Polyline([\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1),\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.807411 + Math.random() * 1),\n      ]);\n      const graphic = new Green.Graphic(polyline, lineSymbol);\n      map.addGraphic(graphic);\n    }\n\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Fill Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const fillSymbol = new Green.SimpleFillSymbol();\n    //添加面\n    const polygon = new Green.Polygon([\n      [\n        new Green.LatLng(39.859186, 116.347411),\n        new Green.LatLng(39.959186, 116.347411),\n        new Green.LatLng(39.959186, 116.447411),\n        new Green.LatLng(39.859186, 116.447411),\n      ],\n    ]);\n    const graphic = new Green.Graphic(polygon, fillSymbol);\n    map.addGraphic(graphic);\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Pattern Fill Symbol",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 12);\n    //设置渲染符号\n    const fillSymbol = new Green.LinePatternFillSymbol();\n    //添加面\n    const polygon = new Green.Polygon([\n      [\n        new Green.LatLng(39.859186, 116.347411),\n        new Green.LatLng(39.959186, 116.347411),\n        new Green.LatLng(39.959186, 116.447411),\n        new Green.LatLng(39.859186, 116.447411),\n      ],\n    ]);\n    const graphic = new Green.Graphic(polygon, fillSymbol);\n    map.addGraphic(graphic);\n\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Adapter",
    "items": [
      {
        "title": "GeoJSON",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    const geojsonAdapter = new Green.GeoJSONAdapter(\n      Green.GeometryType.Polygon,\n      'https://raw.githubusercontent.com/shengzheng1981/green-leaf/master/demo/assets/geojson/beijing.json'\n    );\n    //新建要素类\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Polygon);\n    //新建字段\n    const field = new Green.Field('name', Green.FieldType.String);\n    featureClass.addField(field);\n    featureClass.load(geojsonAdapter).then(\n      () => {\n        //新建矢量图层\n        const featureLayer = new Green.FeatureLayer();\n        featureLayer.featureClass = featureClass;\n        //设置渲染方式——分类渲染\n        const renderer = new Green.CategoryRenderer();\n        renderer.generate(featureClass, field);\n        featureLayer.renderer = renderer;\n        featureLayer.zoom = [5, 20];\n        //响应点击事件\n        featureLayer.on('click', (event) => {\n          console.log(event.target);\n        });\n        //添加矢量图层\n        map.addFeatureLayer(featureLayer);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  </script>\n</body>\n</html>"
      }
    ]
  },
  {
    "title": "Raster",
    "items": [
      {
        "title": "IDW",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer2 = new Green.FeatureLayer();\n    layer2.featureClass = featureClass;\n    //设置渲染方式——单一渲染\n    const renderer = new Green.SimpleRenderer();\n    renderer.symbol = new Green.SimplePointSymbol();\n    layer2.renderer = renderer;\n    //设置图层标记\n    const label = new Green.Label();\n    label.field = field;\n    layer2.label = label;\n    layer2.labeled = true;\n    //生成随机数据\n    for (let i = 1; i <= 100; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      feature.on('click', () => {\n        console.log(feature.properties['rank']);\n      });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer2);\n    //新建反距离加权插值图\n    const raster = new Green.IDW();\n    raster.honey = true;\n    raster.generate(featureClass, field);\n    //新建栅格图层\n    const rasterLayer = new Green.RasterLayer();\n    rasterLayer.raster = raster;\n    //添加栅格图层\n    map.addRasterLayer(rasterLayer);\n\n  </script>\n</body>\n</html>"
      },
      {
        "title": "Heat",
        "script": "<!DOCTYPE html>\n<html style=\"width: 100%; height:100%;\" lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <script type=\"text/javascript\" src=\"https://unpkg.com/green-leaf@0.0.7/green-leaf.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/green-leaf@0.0.7/leaflet.css\" />\n</head>\n<body style=\"width: 100%; height:100%; margin: 0px; overflow: hidden;\">\n  <div id=\"foo\" style=\"width: 100%; height: 100%; overflow: hidden;\"></div>\n  <script>\n    const map = new Green.Map(\"foo\");\n    //加载OSM切片\n    const tile = new Green.Tile('http://{s}.tile.osm.org/{z}/{x}/{y}.png');\n    tile.addTo(map);\n    \n    map.setView(new Green.LatLng(39.909186, 116.397411), 9);\n    const featureClass = new Green.FeatureClass(Green.GeometryType.Point);\n    //新建字段\n    const field = new Green.Field('rank', Green.FieldType.Number);\n    featureClass.addField(field);\n    //新建矢量图层\n    const layer2 = new Green.FeatureLayer();\n    layer2.featureClass = featureClass;\n    //设置渲染方式——单一渲染\n    const renderer = new Green.SimpleRenderer();\n    renderer.symbol = new Green.SimplePointSymbol();\n    layer2.renderer = renderer;\n    //设置图层标记\n    const label = new Green.Label();\n    label.field = field;\n    layer2.label = label;\n    layer2.labeled = true;\n    //生成随机数据\n    for (let i = 1; i <= 100; i++) {\n      const point = new Green.Point(\n        new Green.LatLng(39.409186 + Math.random() * 1, 115.897411 + Math.random() * 1)\n      );\n      const feature = new Green.Feature(point, { rank: Math.round(Math.random() * 10) });\n      feature.on('click', () => {\n        console.log(feature.properties['rank']);\n      });\n      featureClass.addFeature(feature);\n    }\n    //添加矢量图层\n    map.addFeatureLayer(layer2);\n    //新建热力图\n    const raster = new Green.Heat();\n    raster.honey = true;\n    raster.generate(featureClass, field);\n    //新建栅格图层\n    const rasterLayer = new Green.RasterLayer();\n    rasterLayer.raster = raster;\n    //添加栅格图层\n    map.addRasterLayer(rasterLayer);\n\n  </script>\n</body>\n</html>"
      }
    ]
  }
]