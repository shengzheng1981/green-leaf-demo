{"version":3,"sources":["./src/app/main/animation/line.component.html","./src/app/main/animation/particle.component.scss","./src/app/main/animation/particle.component.ts","./src/app/main/animation/animation.module.ts","./src/app/main/animation/point.component.html","./src/app/main/animation/line.component.scss","./src/app/main/animation/particle.component.html","./src/app/main/animation/point.component.scss","./src/app/main/animation/point.component.ts","./src/app/main/animation/line.component.ts"],"names":[],"mappings":"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","file":"main-animation-animation-module-es2015.js","sourcesContent":["export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"animation\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">起始色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.startColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">终止色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.endColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">线宽：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"width\\\" [(ngModel)]=\\\"animation.lineWidth\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"2\\\" [max]=\\\"8\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">弧度(rad)：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"angle\\\" [(ngModel)]=\\\"animation.angle\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"0\\\" [max]=\\\"1\\\" step=\\\"0.1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXJ0aWNsZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label, ParticleAnimation,\n    Point, PointAnimation, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-particle',\n    templateUrl: './particle.component.html',\n    styleUrls: ['./particle.component.scss']\n})\nexport class ParticleComponent implements OnInit {\n\n    map: any;\n\n    animation: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.map.setView([116.397411,39.909186], 4);\n\n        const point = new Point(116.397411,39.909186);\n        this.animation = new ParticleAnimation(point);\n        this.map.addAnimation(this.animation);\n    }\n\n    change() {\n        if (this.animation) {\n            this.map.redraw();\n        }\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {PointComponent} from \"./point.component\";\nimport {ParticleComponent} from \"./particle.component\";\nimport {LineComponent} from \"./line.component\";\n\nconst routes: Routes = [\n    {\n        path: 'point',\n        component: PointComponent\n    },\n    {\n        path: 'line',\n        component: LineComponent\n    },\n    {\n        path: 'particle',\n        component: ParticleComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        PointComponent, LineComponent, ParticleComponent\n    ]\n})\nexport class AnimationModule {\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"animation\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.color\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">光圈数：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"ring\\\" [(ngModel)]=\\\"animation.ring\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"2\\\" [max]=\\\"5\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">扩散速度：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"velocity\\\" [(ngModel)]=\\\"animation.velocity\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"5\\\" [max]=\\\"30\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">最大半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"limit\\\" [(ngModel)]=\\\"animation.limit\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"20\\\" [max]=\\\"50\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaW5lLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"animation\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.color\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">轨道半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"radius\\\" [(ngModel)]=\\\"animation.radius\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"20\\\" [max]=\\\"80\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">环绕速度：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"speed\\\" [(ngModel)]=\\\"animation.speed\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"5\\\" [max]=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">粒子数：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"count\\\" [(ngModel)]=\\\"animation.count\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"5\\\" [max]=\\\"50\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2ludC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, PointAnimation, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-point',\n    templateUrl: './point.component.html',\n    styleUrls: ['./point.component.scss']\n})\nexport class PointComponent implements OnInit {\n\n    map: any;\n\n    animation: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.map.setView([116.397411,39.909186], 4);\n\n        const point = new Point(116.397411,39.909186);\n        this.animation = new PointAnimation(point);\n        this.map.addAnimation(this.animation);\n    }\n\n    change() {\n        if (this.animation) {\n            this.map.redraw();\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label, LineAnimation,\n    Point, PointAnimation, Polyline, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-line',\n    templateUrl: './line.component.html',\n    styleUrls: ['./line.component.scss']\n})\nexport class LineComponent implements OnInit {\n\n    map: any;\n\n    animation: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.map.setView([116.397411,39.909186], 4);\n\n        const polyline = new Polyline([[116.397411,39.909186],[109.519, 18.271]]);\n        this.animation = new LineAnimation(polyline);\n\n        this.map.addAnimation(this.animation);\n\n    }\n\n    change() {\n        if (this.animation) {\n            this.map.redraw();\n        }\n    }\n\n}\n"],"sourceRoot":"webpack:///"}