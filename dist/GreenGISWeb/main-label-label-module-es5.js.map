{"version":3,"sources":["webpack:///src/app/main/label/distance.component.ts","webpack:///src/app/main/label/distance.component.scss","webpack:///src/app/main/label/label.module.ts","webpack:///src/app/main/label/cover.component.ts","webpack:///src/app/main/label/distance.component.html","webpack:///src/app/main/label/simple.component.scss","webpack:///src/app/main/label/cover.component.scss","webpack:///src/app/main/label/simple.component.ts","webpack:///src/app/main/label/cover.component.html","webpack:///src/app/main/label/simple.component.html"],"names":["DistanceComponent","router","configService","http","option","labeled","label","strokeStyle","fillStyle","offsetX","offsetY","fontColor","fontSize","placement","padding","event","map","get","subscribe","data","featureClass","Point","loadGeoJSON","featureLayer","field2","name","type","String","renderer","generate","symbol","pointSymbolWidth","pointSymbolHeight","field","collision","zoom","addLayer","setView","redraw","selector","template","routes","path","component","LabelModule","imports","forChild","declarations","CoverComponent","SimpleComponent"],"mappings":"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","file":"main-label-label-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label, NullCollision,\n    Point, SimpleCollision, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-distance',\n    templateUrl: './distance.component.html',\n    styleUrls: ['./distance.component.scss']\n})\nexport class DistanceComponent implements OnInit {\n\n    option = {\n        labeled: true,\n        label: {\n            strokeStyle: \"#ff0000\",\n            fillStyle: \"#ffffff\",\n            offsetX: 0,\n            offsetY: 0,\n            fontColor: \"#ff0000\",\n            fontSize: 12,\n            placement:  \"BOTTOM\",   //BOTTOM TOP LEFT RIGHT\n            padding: 5\n        }\n    };\n\n    map: any;\n\n    featureLayer: any;\n    label: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field2 = new Field();\n                field2.name = \"NAME\";\n                field2.type = FieldType.String;\n                const renderer = new CategoryRenderer();\n                renderer.generate(featureClass, field2);\n                this.featureLayer.renderer = renderer;\n                this.label = new Label();\n                const symbol = new SimpleTextSymbol();\n                symbol.pointSymbolWidth = 12;     //diameter\n                symbol.pointSymbolHeight = 12;   //diameter\n                this.label.field = field2;\n                this.label.symbol = symbol;\n                this.label.collision = new SimpleCollision();\n                this.featureLayer.label = this.label;\n                this.featureLayer.labeled = this.option.labeled;\n                this.featureLayer.zoom = [12, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        this.featureLayer.labeled = this.option.labeled;\n        this.map.redraw();\n    }\n\n    change() {\n        if (this.label && this.label.symbol) {\n            this.label.symbol.strokeStyle = this.option.label.strokeStyle;\n            this.label.symbol.fillStyle = this.option.label.fillStyle;\n            this.label.symbol.fontColor = this.option.label.fontColor;\n            this.label.symbol.fontSize = this.option.label.fontSize;\n            this.label.symbol.placement = this.option.label.placement;\n            this.label.symbol.padding = this.option.label.padding;\n            this.label.symbol.offsetX = this.option.label.offsetX;\n            this.label.symbol.offsetY = this.option.label.offsetY;\n            this.map.redraw();\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkaXN0YW5jZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {SimpleComponent} from './simple.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {DistanceComponent} from \"./distance.component\";\nimport {CoverComponent} from \"./cover.component\";\n\nconst routes: Routes = [\n    {\n        path: 'simple',\n        component: SimpleComponent\n    },\n    {\n        path: 'distance',\n        component: DistanceComponent\n    },\n    {\n        path: 'cover',\n        component: CoverComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        SimpleComponent, DistanceComponent, CoverComponent\n    ]\n})\nexport class LabelModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer, CoverCollision,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label, NullCollision,\n    Point, SimpleCollision, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-cover',\n    templateUrl: './cover.component.html',\n    styleUrls: ['./cover.component.scss']\n})\nexport class CoverComponent implements OnInit {\n\n    option = {\n        labeled: true,\n        label: {\n            strokeStyle: \"#ff0000\",\n            fillStyle: \"#ffffff\",\n            offsetX: 12,\n            offsetY: 12,\n            fontColor: \"#ff0000\",\n            fontSize: 12,\n            placement:  \"BOTTOM\",   //BOTTOM TOP LEFT RIGHT\n            padding: 5\n        }\n    };\n\n    map: any;\n\n    featureLayer: any;\n    label: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field2 = new Field();\n                field2.name = \"NAME\";\n                field2.type = FieldType.String;\n                const renderer = new CategoryRenderer();\n                renderer.generate(featureClass, field2);\n                this.featureLayer.renderer = renderer;\n                this.label = new Label();\n                const symbol = new SimpleTextSymbol();\n                symbol.pointSymbolWidth = 12;     //diameter\n                symbol.pointSymbolHeight = 12;   //diameter\n                this.label.field = field2;\n                this.label.symbol = symbol;\n                this.label.collision = new CoverCollision();\n                this.featureLayer.label = this.label;\n                this.featureLayer.labeled = this.option.labeled;\n                this.featureLayer.zoom = [12, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        this.featureLayer.labeled = this.option.labeled;\n        this.map.redraw();\n    }\n\n    change() {\n        if (this.label && this.label.symbol) {\n            this.label.symbol.strokeStyle = this.option.label.strokeStyle;\n            this.label.symbol.fillStyle = this.option.label.fillStyle;\n            this.label.symbol.fontColor = this.option.label.fontColor;\n            this.label.symbol.fontSize = this.option.label.fontSize;\n            this.label.symbol.placement = this.option.label.placement;\n            this.label.symbol.padding = this.option.label.padding;\n            this.label.symbol.pointSymbolWidth = this.option.label.offsetX;\n            this.label.symbol.pointSymbolHeight = this.option.label.offsetY;\n            this.map.redraw();\n        }\n    }\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">标注：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.labeled\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.label.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.label.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.label.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.label.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaW1wbGUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3Zlci5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label, NullCollision,\n    Point, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-simple',\n    templateUrl: './simple.component.html',\n    styleUrls: ['./simple.component.scss']\n})\nexport class SimpleComponent implements OnInit {\n\n    option = {\n        labeled: true,\n        label: {\n            strokeStyle: \"#ff0000\",\n            fillStyle: \"#ffffff\",\n            offsetX: 0,\n            offsetY: 0,\n            fontColor: \"#ff0000\",\n            fontSize: 12,\n            placement:  \"BOTTOM\",   //BOTTOM TOP LEFT RIGHT\n            padding: 5\n        }\n    };\n\n    map: any;\n\n    featureLayer: any;\n    label: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field2 = new Field();\n                field2.name = \"NAME\";\n                field2.type = FieldType.String;\n                const renderer = new CategoryRenderer();\n                renderer.generate(featureClass, field2);\n                this.featureLayer.renderer = renderer;\n                this.label = new Label();\n                const symbol = new SimpleTextSymbol();\n                symbol.pointSymbolWidth = 12;     //diameter\n                symbol.pointSymbolHeight = 12;   //diameter\n                this.label.field = field2;\n                this.label.symbol = symbol;\n                this.label.collision = new NullCollision();\n                this.featureLayer.label = this.label;\n                this.featureLayer.labeled = this.option.labeled;\n                this.featureLayer.zoom = [12, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        this.featureLayer.labeled = this.option.labeled;\n        this.map.redraw();\n    }\n\n    change() {\n        if (this.label && this.label.symbol) {\n            this.label.symbol.strokeStyle = this.option.label.strokeStyle;\n            this.label.symbol.fillStyle = this.option.label.fillStyle;\n            this.label.symbol.fontColor = this.option.label.fontColor;\n            this.label.symbol.fontSize = this.option.label.fontSize;\n            this.label.symbol.placement = this.option.label.placement;\n            this.label.symbol.padding = this.option.label.padding;\n            this.label.symbol.offsetX = this.option.label.offsetX;\n            this.label.symbol.offsetY = this.option.label.offsetY;\n            this.map.redraw();\n        }\n    }\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">标注：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.labeled\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.label.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.label.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.label.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.label.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">标注方位：</div>\\n                    <select class=\\\"form-control\\\" name=\\\"placement\\\" [(ngModel)]=\\\"option.label.placement\\\" (ngModelChange)=\\\"change()\\\">\\n                        <option value=\\\"TOP\\\">TOP</option>\\n                        <option value=\\\"BOTTOM\\\">BOTTOM</option>\\n                        <option value=\\\"LEFT\\\">LEFT</option>\\n                        <option value=\\\"RIGHT\\\">RIGHT</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">周边留白：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"padding\\\" [(ngModel)]=\\\"option.label.padding\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"2\\\" max=\\\"10\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">X偏移：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"offsetX\\\" [(ngModel)]=\\\"option.label.offsetX\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">Y偏移：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"offsetY\\\" [(ngModel)]=\\\"option.label.offsetY\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">标注：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.labeled\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.label.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.label.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.label.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.label.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";"]}