{"version":3,"sources":["webpack:///src/app/main/renderer/class.component.ts","webpack:///src/app/main/renderer/simple.component.html","webpack:///src/app/main/renderer/simple.component.scss","webpack:///src/app/main/renderer/class.component.scss","webpack:///src/app/main/renderer/renderer.module.ts","webpack:///src/app/main/renderer/category.component.ts","webpack:///src/app/main/renderer/simple.component.ts","webpack:///src/app/main/renderer/class.component.html","webpack:///src/app/main/renderer/category.component.html","webpack:///src/app/main/renderer/category.component.scss"],"names":["ClassComponent","router","configService","http","option","visible","strokeStyle","fillStyle","event","map","get","subscribe","data","featureClass","Point","loadGeoJSON","featureLayer","field","name","type","Number","renderer","generate","items","forEach","item","symbol","colorRgb2Hex","zoom","addLayer","setView","rgb","startsWith","split","r","parseInt","g","b","hex","toString","slice","redraw","selector","template","routes","path","component","RendererModule","imports","forChild","declarations","CategoryComponent","String","SimpleComponent"],"mappings":"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","file":"main-renderer-renderer-module-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer, ClassRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-class',\n    templateUrl: './class.component.html',\n    styleUrls: ['./class.component.scss']\n})\nexport class ClassComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\"\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field = new Field();\n                field.name = \"DEPTH\";\n                field.type = FieldType.Number;\n                this.renderer  = new ClassRenderer();\n                this.renderer.generate(featureClass, field, 5);\n                this.renderer.items.forEach(item => {\n                    item.symbol.strokeStyle = this.colorRgb2Hex(item.symbol.strokeStyle);\n                    item.symbol.fillStyle = this.colorRgb2Hex(item.symbol.fillStyle);\n                });\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    colorRgb2Hex(rgb) {\n        if (!rgb) {\n            return null;\n        } else {\n            if (rgb.startsWith('rgb')) {\n                rgb = rgb.split(',');\n                let r = parseInt(rgb[0].split('(')[1]);\n                let g = parseInt(rgb[1]);\n                let b = parseInt(rgb[2].split(')')[0]);\n                let hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n                return hex;\n            } else {\n                return rgb;\n            }\n        }\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            //this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            //this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaW1wbGUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGFzcy5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {SimpleComponent} from \"./simple.component\";\nimport {CategoryComponent} from \"./category.component\";\nimport {ClassComponent} from \"./class.component\";\n\n\nconst routes: Routes = [\n    {\n        path: 'simple',\n        component: SimpleComponent\n    },\n    {\n        path: 'category',\n        component: CategoryComponent\n    },\n    {\n        path: 'class',\n        component: ClassComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        SimpleComponent, CategoryComponent, ClassComponent\n    ]\n})\nexport class RendererModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-category',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\"\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field = new Field();\n                field.name = \"TYPE\";\n                field.type = FieldType.String;\n                this.renderer  = new CategoryRenderer();\n                this.renderer.generate(featureClass, field);\n                this.renderer.items.forEach(item => {\n                    item.symbol.strokeStyle = this.colorRgb2Hex(item.symbol.strokeStyle);\n                    item.symbol.fillStyle = this.colorRgb2Hex(item.symbol.fillStyle);\n                });\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    colorRgb2Hex(rgb) {\n        if (!rgb) {\n            return null;\n        } else {\n            if (rgb.startsWith('rgb')) {\n                rgb = rgb.split(',');\n                let r = parseInt(rgb[0].split('(')[1]);\n                let g = parseInt(rgb[1]);\n                let b = parseInt(rgb[2].split(')')[0]);\n                let hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n                return hex;\n            } else {\n                return rgb;\n            }\n        }\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            //this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            //this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-simple',\n    templateUrl: './simple.component.html',\n    styleUrls: ['./simple.component.scss']\n})\nexport class SimpleComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\"\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                this.renderer = new SimpleRenderer();\n                this.renderer.symbol = new SimplePointSymbol();\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\"></div>\\n                <ng-container *ngFor=\\\"let item of this.renderer?.items\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 45px\\\">分类：</div>\\n                        <input class=\\\"form-control\\\" [ngModel]=\\\"item.label\\\" readonly/>\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">边框色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'strokeColor'\\\" [(ngModel)]=\\\"item.symbol.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">填充色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'fillColor'\\\" [(ngModel)]=\\\"item.symbol.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                </ng-container>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\"></div>\\n                <ng-container *ngFor=\\\"let item of this.renderer?.items\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">分类：</div>\\n                        <input class=\\\"form-control\\\" [ngModel]=\\\"item.value\\\" readonly/>\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">边框色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'strokeColor'\\\" [(ngModel)]=\\\"item.symbol.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">填充色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'fillColor'\\\" [(ngModel)]=\\\"item.symbol.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                </ng-container>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yeS5jb21wb25lbnQuc2NzcyJ9 */\";"]}