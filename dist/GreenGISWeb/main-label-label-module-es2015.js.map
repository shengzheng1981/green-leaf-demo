{"version":3,"sources":["./src/app/main/label/distance.component.ts","./src/app/main/label/distance.component.scss","./src/app/main/label/label.module.ts","./src/app/main/label/cover.component.ts","./src/app/main/label/distance.component.html","./src/app/main/label/simple.component.scss","./src/app/main/label/cover.component.scss","./src/app/main/label/simple.component.ts","./src/app/main/label/cover.component.html","./src/app/main/label/simple.component.html"],"names":[],"mappings":"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","file":"main-label-label-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label, NullCollision,\n    Point, SimpleCollision, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-distance',\n    templateUrl: './distance.component.html',\n    styleUrls: ['./distance.component.scss']\n})\nexport class DistanceComponent implements OnInit {\n\n    option = {\n        labeled: true,\n        label: {\n            strokeStyle: \"#ff0000\",\n            fillStyle: \"#ffffff\",\n            offsetX: 0,\n            offsetY: 0,\n            fontColor: \"#ff0000\",\n            fontSize: 12,\n            placement:  \"BOTTOM\",   //BOTTOM TOP LEFT RIGHT\n            padding: 5\n        }\n    };\n\n    map: any;\n\n    featureLayer: any;\n    label: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field2 = new Field();\n                field2.name = \"NAME\";\n                field2.type = FieldType.String;\n                const renderer = new CategoryRenderer();\n                renderer.generate(featureClass, field2);\n                this.featureLayer.renderer = renderer;\n                this.label = new Label();\n                const symbol = new SimpleTextSymbol();\n                symbol.pointSymbolWidth = 12;     //diameter\n                symbol.pointSymbolHeight = 12;   //diameter\n                this.label.field = field2;\n                this.label.symbol = symbol;\n                this.label.collision = new SimpleCollision();\n                this.featureLayer.label = this.label;\n                this.featureLayer.labeled = this.option.labeled;\n                this.featureLayer.zoom = [12, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        this.featureLayer.labeled = this.option.labeled;\n        this.map.redraw();\n    }\n\n    change() {\n        if (this.label && this.label.symbol) {\n            this.label.symbol.strokeStyle = this.option.label.strokeStyle;\n            this.label.symbol.fillStyle = this.option.label.fillStyle;\n            this.label.symbol.fontColor = this.option.label.fontColor;\n            this.label.symbol.fontSize = this.option.label.fontSize;\n            this.label.symbol.placement = this.option.label.placement;\n            this.label.symbol.padding = this.option.label.padding;\n            this.label.symbol.offsetX = this.option.label.offsetX;\n            this.label.symbol.offsetY = this.option.label.offsetY;\n            this.map.redraw();\n        }\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkaXN0YW5jZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {SimpleComponent} from './simple.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {DistanceComponent} from \"./distance.component\";\nimport {CoverComponent} from \"./cover.component\";\n\nconst routes: Routes = [\n    {\n        path: 'simple',\n        component: SimpleComponent\n    },\n    {\n        path: 'distance',\n        component: DistanceComponent\n    },\n    {\n        path: 'cover',\n        component: CoverComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        SimpleComponent, DistanceComponent, CoverComponent\n    ]\n})\nexport class LabelModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer, CoverCollision,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label, NullCollision,\n    Point, SimpleCollision, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-cover',\n    templateUrl: './cover.component.html',\n    styleUrls: ['./cover.component.scss']\n})\nexport class CoverComponent implements OnInit {\n\n    option = {\n        labeled: true,\n        label: {\n            strokeStyle: \"#ff0000\",\n            fillStyle: \"#ffffff\",\n            offsetX: 12,\n            offsetY: 12,\n            fontColor: \"#ff0000\",\n            fontSize: 12,\n            placement:  \"BOTTOM\",   //BOTTOM TOP LEFT RIGHT\n            padding: 5\n        }\n    };\n\n    map: any;\n\n    featureLayer: any;\n    label: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field2 = new Field();\n                field2.name = \"NAME\";\n                field2.type = FieldType.String;\n                const renderer = new CategoryRenderer();\n                renderer.generate(featureClass, field2);\n                this.featureLayer.renderer = renderer;\n                this.label = new Label();\n                const symbol = new SimpleTextSymbol();\n                symbol.pointSymbolWidth = 12;     //diameter\n                symbol.pointSymbolHeight = 12;   //diameter\n                this.label.field = field2;\n                this.label.symbol = symbol;\n                this.label.collision = new CoverCollision();\n                this.featureLayer.label = this.label;\n                this.featureLayer.labeled = this.option.labeled;\n                this.featureLayer.zoom = [12, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        this.featureLayer.labeled = this.option.labeled;\n        this.map.redraw();\n    }\n\n    change() {\n        if (this.label && this.label.symbol) {\n            this.label.symbol.strokeStyle = this.option.label.strokeStyle;\n            this.label.symbol.fillStyle = this.option.label.fillStyle;\n            this.label.symbol.fontColor = this.option.label.fontColor;\n            this.label.symbol.fontSize = this.option.label.fontSize;\n            this.label.symbol.placement = this.option.label.placement;\n            this.label.symbol.padding = this.option.label.padding;\n            this.label.symbol.pointSymbolWidth = this.option.label.offsetX;\n            this.label.symbol.pointSymbolHeight = this.option.label.offsetY;\n            this.map.redraw();\n        }\n    }\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">标注：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.labeled\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.label.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.label.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.label.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.label.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaW1wbGUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3Zlci5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label, NullCollision,\n    Point, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-simple',\n    templateUrl: './simple.component.html',\n    styleUrls: ['./simple.component.scss']\n})\nexport class SimpleComponent implements OnInit {\n\n    option = {\n        labeled: true,\n        label: {\n            strokeStyle: \"#ff0000\",\n            fillStyle: \"#ffffff\",\n            offsetX: 0,\n            offsetY: 0,\n            fontColor: \"#ff0000\",\n            fontSize: 12,\n            placement:  \"BOTTOM\",   //BOTTOM TOP LEFT RIGHT\n            padding: 5\n        }\n    };\n\n    map: any;\n\n    featureLayer: any;\n    label: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field2 = new Field();\n                field2.name = \"NAME\";\n                field2.type = FieldType.String;\n                const renderer = new CategoryRenderer();\n                renderer.generate(featureClass, field2);\n                this.featureLayer.renderer = renderer;\n                this.label = new Label();\n                const symbol = new SimpleTextSymbol();\n                symbol.pointSymbolWidth = 12;     //diameter\n                symbol.pointSymbolHeight = 12;   //diameter\n                this.label.field = field2;\n                this.label.symbol = symbol;\n                this.label.collision = new NullCollision();\n                this.featureLayer.label = this.label;\n                this.featureLayer.labeled = this.option.labeled;\n                this.featureLayer.zoom = [12, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        this.featureLayer.labeled = this.option.labeled;\n        this.map.redraw();\n    }\n\n    change() {\n        if (this.label && this.label.symbol) {\n            this.label.symbol.strokeStyle = this.option.label.strokeStyle;\n            this.label.symbol.fillStyle = this.option.label.fillStyle;\n            this.label.symbol.fontColor = this.option.label.fontColor;\n            this.label.symbol.fontSize = this.option.label.fontSize;\n            this.label.symbol.placement = this.option.label.placement;\n            this.label.symbol.padding = this.option.label.padding;\n            this.label.symbol.offsetX = this.option.label.offsetX;\n            this.label.symbol.offsetY = this.option.label.offsetY;\n            this.map.redraw();\n        }\n    }\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">标注：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.labeled\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.label.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.label.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.label.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.label.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">标注方位：</div>\\n                    <select class=\\\"form-control\\\" name=\\\"placement\\\" [(ngModel)]=\\\"option.label.placement\\\" (ngModelChange)=\\\"change()\\\">\\n                        <option value=\\\"TOP\\\">TOP</option>\\n                        <option value=\\\"BOTTOM\\\">BOTTOM</option>\\n                        <option value=\\\"LEFT\\\">LEFT</option>\\n                        <option value=\\\"RIGHT\\\">RIGHT</option>\\n                    </select>\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">周边留白：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"padding\\\" [(ngModel)]=\\\"option.label.padding\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"2\\\" max=\\\"10\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">X偏移：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"offsetX\\\" [(ngModel)]=\\\"option.label.offsetX\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">Y偏移：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"offsetY\\\" [(ngModel)]=\\\"option.label.offsetY\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"0\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">标注：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.labeled\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.label.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.label.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.label.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.label.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}