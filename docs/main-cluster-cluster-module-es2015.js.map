{"version":3,"sources":["./src/app/main/cluster/cluster.component.html","./src/app/main/cluster/cluster.component.scss","./src/app/main/cluster/cluster.component.ts","./src/app/main/cluster/cluster.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8SAA+O,WAAW,aAAa,eAAe,qLAAqL,gCAAgC,gBAAgB,wFAAwF,sRAAsR,E;;;;;;;;;;;;ACAx3B;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;;;;;;;;;ACAxI;AACQ;AACjB;AAUpB;AAC6B;IAOnC,gBAAgB,SAAhB,gBAAgB;IASzB,YAAoB,MAAc,EAAS,aAA4B,EAAU,IAAgB;QAA7E,WAAM,GAAN,MAAM,CAAQ;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAU,SAAI,GAAJ,IAAI,CAAY;QAPjG,WAAM,GAAG;YACL,OAAO,EAAE,IAAI;SAChB,CAAC;IAMF,CAAC;IAED,QAAQ;IAER,CAAC;IAED,4CAA4C;IACtC,OAAO,CAAC,KAAK;;YACf,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,CAAC;iBACxC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;gBACrB,MAAM,YAAY,GAAG,IAAI,sDAAY,CAAC,sDAAY,CAAC,KAAK,CAAC,CAAC;gBAC1D,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,GAAG,IAAI,sDAAY,EAAE,CAAC;gBACvC,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC;gBAC9C,MAAM,QAAQ,GAAG,IAAI,wDAAc,EAAE,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;gBAChD,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACrC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACX,CAAC;KAAA;IAED,MAAM;QACF,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAChD,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SACrB;IACL,CAAC;CAEJ;;YA3DO,sDAAM;YADN,kEAAa;YAYb,+DAAU;;AAOL,gBAAgB;IAL5B,+DAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAE1C,CAAC;GACW,gBAAgB,CAyC5B;AAzC4B;;;;;;;;;;;;;;;;;;;;;;ACpBU;AACc;AACA;AACH;AACuB;AAEzE,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC9B;CACJ,CAAC;IAYW,aAAa,SAAb,aAAa;CACzB;AADY,aAAa;IAVzB,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAU,CAAC,QAAQ,EAAE;YACrB,kEAAgB;YAChB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAChC;QACD,YAAY,EAAE;YACV,mEAAgB;SACnB;KACJ,CAAC;GACW,aAAa,CACzB;AADyB","file":"main-cluster-cluster-module-es2015.js","sourcesContent":["export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">聚合：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.cluster\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbHVzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-cluster',\n    templateUrl: './cluster.component.html',\n    styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n\n    option = {\n        cluster: true\n    };\n\n    map: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const renderer = new SimpleRenderer();\n                this.featureLayer.cluster = this.option.cluster;\n                this.featureLayer.renderer = renderer;\n                this.featureLayer.zoom = [13, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        if (this.featureLayer) {\n            this.featureLayer.cluster = this.option.cluster;\n            this.map.redraw();\n        }\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {ClusterComponent} from './cluster.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ClusterComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        ClusterComponent\n    ]\n})\nexport class ClusterModule {\n}\n"],"sourceRoot":"webpack:///"}