{"version":3,"sources":["./src/app/main/renderer/class.component.ts","./src/app/main/renderer/simple.component.html","./src/app/main/renderer/simple.component.scss","./src/app/main/renderer/class.component.scss","./src/app/main/renderer/renderer.module.ts","./src/app/main/renderer/category.component.ts","./src/app/main/renderer/simple.component.ts","./src/app/main/renderer/class.component.html","./src/app/main/renderer/category.component.html","./src/app/main/renderer/category.component.scss"],"names":[],"mappings":"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","file":"main-renderer-renderer-module-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer, ClassRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-class',\n    templateUrl: './class.component.html',\n    styleUrls: ['./class.component.scss']\n})\nexport class ClassComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\"\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field = new Field();\n                field.name = \"DEPTH\";\n                field.type = FieldType.Number;\n                this.renderer  = new ClassRenderer();\n                this.renderer.generate(featureClass, field, 5);\n                this.renderer.items.forEach(item => {\n                    item.symbol.strokeStyle = this.colorRgb2Hex(item.symbol.strokeStyle);\n                    item.symbol.fillStyle = this.colorRgb2Hex(item.symbol.fillStyle);\n                });\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    colorRgb2Hex(rgb) {\n        if (!rgb) {\n            return null;\n        } else {\n            if (rgb.startsWith('rgb')) {\n                rgb = rgb.split(',');\n                let r = parseInt(rgb[0].split('(')[1]);\n                let g = parseInt(rgb[1]);\n                let b = parseInt(rgb[2].split(')')[0]);\n                let hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n                return hex;\n            } else {\n                return rgb;\n            }\n        }\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            //this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            //this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaW1wbGUuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbGFzcy5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {SimpleComponent} from \"./simple.component\";\nimport {CategoryComponent} from \"./category.component\";\nimport {ClassComponent} from \"./class.component\";\n\n\nconst routes: Routes = [\n    {\n        path: 'simple',\n        component: SimpleComponent\n    },\n    {\n        path: 'category',\n        component: CategoryComponent\n    },\n    {\n        path: 'class',\n        component: ClassComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        SimpleComponent, CategoryComponent, ClassComponent\n    ]\n})\nexport class RendererModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    CategoryRenderer,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field, FieldType,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-category',\n    templateUrl: './category.component.html',\n    styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\"\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const field = new Field();\n                field.name = \"TYPE\";\n                field.type = FieldType.String;\n                this.renderer  = new CategoryRenderer();\n                this.renderer.generate(featureClass, field);\n                this.renderer.items.forEach(item => {\n                    item.symbol.strokeStyle = this.colorRgb2Hex(item.symbol.strokeStyle);\n                    item.symbol.fillStyle = this.colorRgb2Hex(item.symbol.fillStyle);\n                });\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    colorRgb2Hex(rgb) {\n        if (!rgb) {\n            return null;\n        } else {\n            if (rgb.startsWith('rgb')) {\n                rgb = rgb.split(',');\n                let r = parseInt(rgb[0].split('(')[1]);\n                let g = parseInt(rgb[1]);\n                let b = parseInt(rgb[2].split(')')[0]);\n                let hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n                return hex;\n            } else {\n                return rgb;\n            }\n        }\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            //this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            //this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-simple',\n    templateUrl: './simple.component.html',\n    styleUrls: ['./simple.component.scss']\n})\nexport class SimpleComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\"\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                this.renderer = new SimpleRenderer();\n                this.renderer.symbol = new SimplePointSymbol();\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\"></div>\\n                <ng-container *ngFor=\\\"let item of this.renderer?.items\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 45px\\\">分类：</div>\\n                        <input class=\\\"form-control\\\" [ngModel]=\\\"item.label\\\" readonly/>\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">边框色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'strokeColor'\\\" [(ngModel)]=\\\"item.symbol.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">填充色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'fillColor'\\\" [(ngModel)]=\\\"item.symbol.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                </ng-container>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\"></div>\\n                <ng-container *ngFor=\\\"let item of this.renderer?.items\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">分类：</div>\\n                        <input class=\\\"form-control\\\" [ngModel]=\\\"item.value\\\" readonly/>\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">边框色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'strokeColor'\\\" [(ngModel)]=\\\"item.symbol.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                    <div class=\\\"input-group\\\" *ngIf=\\\"item.symbol\\\">\\n                        <div class=\\\"input-group-addon\\\" style=\\\"width: 100px\\\">填充色：</div>\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [name]=\\\"item.value + 'fillColor'\\\" [(ngModel)]=\\\"item.symbol.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                    </div>\\n                </ng-container>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXRlZ29yeS5jb21wb25lbnQuc2NzcyJ9 */\";"],"sourceRoot":"webpack:///"}