{"version":3,"sources":["webpack:///src/app/main/animation/line.component.html","webpack:///src/app/main/animation/particle.component.scss","webpack:///src/app/main/animation/particle.component.ts","webpack:///src/app/main/animation/animation.module.ts","webpack:///src/app/main/animation/point.component.html","webpack:///src/app/main/animation/line.component.scss","webpack:///src/app/main/animation/particle.component.html","webpack:///src/app/main/animation/point.component.scss","webpack:///src/app/main/animation/point.component.ts","webpack:///src/app/main/animation/line.component.ts"],"names":["ParticleComponent","router","configService","http","event","map","setView","point","animation","addAnimation","redraw","selector","template","routes","path","component","AnimationModule","imports","forChild","declarations","PointComponent","LineComponent","polyline"],"mappings":"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","file":"main-animation-animation-module-es5.js","sourcesContent":["export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"animation\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">起始色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.startColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">终止色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.endColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">线宽：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"width\\\" [(ngModel)]=\\\"animation.lineWidth\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"2\\\" [max]=\\\"8\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">弧度(rad)：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"angle\\\" [(ngModel)]=\\\"animation.angle\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"0\\\" [max]=\\\"1\\\" step=\\\"0.1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXJ0aWNsZS5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label, ParticleAnimation,\n    Point, PointAnimation, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-particle',\n    templateUrl: './particle.component.html',\n    styleUrls: ['./particle.component.scss']\n})\nexport class ParticleComponent implements OnInit {\n\n    map: any;\n\n    animation: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.map.setView([116.397411,39.909186], 4);\n\n        const point = new Point(116.397411,39.909186);\n        this.animation = new ParticleAnimation(point);\n        this.map.addAnimation(this.animation);\n    }\n\n    change() {\n        if (this.animation) {\n            this.map.redraw();\n        }\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {PointComponent} from \"./point.component\";\nimport {ParticleComponent} from \"./particle.component\";\nimport {LineComponent} from \"./line.component\";\n\nconst routes: Routes = [\n    {\n        path: 'point',\n        component: PointComponent\n    },\n    {\n        path: 'line',\n        component: LineComponent\n    },\n    {\n        path: 'particle',\n        component: ParticleComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        PointComponent, LineComponent, ParticleComponent\n    ]\n})\nexport class AnimationModule {\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"animation\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.color\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">光圈数：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"ring\\\" [(ngModel)]=\\\"animation.ring\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"2\\\" [max]=\\\"5\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">扩散速度：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"velocity\\\" [(ngModel)]=\\\"animation.velocity\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"5\\\" [max]=\\\"30\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">最大半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"limit\\\" [(ngModel)]=\\\"animation.limit\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"20\\\" [max]=\\\"50\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaW5lLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"animation\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"color\\\" [(ngModel)]=\\\"animation.color\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">轨道半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"radius\\\" [(ngModel)]=\\\"animation.radius\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"20\\\" [max]=\\\"80\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">环绕速度：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"speed\\\" [(ngModel)]=\\\"animation.speed\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"5\\\" [max]=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">粒子数：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"count\\\" [(ngModel)]=\\\"animation.count\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"5\\\" [max]=\\\"50\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2ludC5jb21wb25lbnQuc2NzcyJ9 */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, PointAnimation, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-point',\n    templateUrl: './point.component.html',\n    styleUrls: ['./point.component.scss']\n})\nexport class PointComponent implements OnInit {\n\n    map: any;\n\n    animation: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.map.setView([116.397411,39.909186], 4);\n\n        const point = new Point(116.397411,39.909186);\n        this.animation = new PointAnimation(point);\n        this.map.addAnimation(this.animation);\n    }\n\n    change() {\n        if (this.animation) {\n            this.map.redraw();\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label, LineAnimation,\n    Point, PointAnimation, Polyline, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-line',\n    templateUrl: './line.component.html',\n    styleUrls: ['./line.component.scss']\n})\nexport class LineComponent implements OnInit {\n\n    map: any;\n\n    animation: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.map.setView([116.397411,39.909186], 4);\n\n        const polyline = new Polyline([[116.397411,39.909186],[109.519, 18.271]]);\n        this.animation = new LineAnimation(polyline);\n\n        this.map.addAnimation(this.animation);\n\n    }\n\n    change() {\n        if (this.animation) {\n            this.map.redraw();\n        }\n    }\n\n}\n"]}