{"version":3,"sources":["webpack:///src/app/main/layer/feature.component.scss","webpack:///src/app/main/layer/layer.module.ts","webpack:///src/app/main/layer/graphic.component.html","webpack:///src/app/main/layer/graphic.component.scss","webpack:///src/app/main/layer/feature.component.html","webpack:///src/app/main/layer/feature.component.ts","webpack:///src/app/main/layer/graphic.component.ts"],"names":["routes","path","component","LayerModule","imports","forChild","declarations","FeatureComponent","router","configService","http","option","visible","strokeStyle","fillStyle","minZoom","maxZoom","event","map","get","subscribe","data","featureClass","Polygon","loadGeoJSON","featureLayer","renderer","symbol","zoom","addLayer","setView","redraw","selector","template","GraphicComponent","latVisible","lngVisible","pointVisible","lngSymbol","lngLayer","i","line","graphic","add","latSymbol","latLayer","j","pointSymbol","radius","pointLayer","point"],"mappings":"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","file":"main-layer-layer-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmZWF0dXJlLmNvbXBvbmVudC5zY3NzIn0= */\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {FeatureComponent} from \"./feature.component\";\nimport {GraphicComponent} from \"./graphic.component\";\n\nconst routes: Routes = [\n    {\n        path: 'feature',\n        component: FeatureComponent\n    },\n    {\n        path: 'graphic',\n        component: GraphicComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        FeatureComponent, GraphicComponent\n    ]\n})\nexport class LayerModule {\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">交点图层：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.pointVisible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">经线图层：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.lngVisible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">纬线图层：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.latVisible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncmFwaGljLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">最小级别：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"minZoom\\\" [(ngModel)]=\\\"option.minZoom\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"3\\\" [max]=\\\"option.maxZoom\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">最大级别：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"maxZoom\\\" [(ngModel)]=\\\"option.maxZoom\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" [min]=\\\"option.minZoom\\\" max=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-feature',\n    templateUrl: './feature.component.html',\n    styleUrls: ['./feature.component.scss']\n})\nexport class FeatureComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\",\n        minZoom: 5,\n        maxZoom: 20\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/chongqing.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Polygon);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                this.renderer = new SimpleRenderer();\n                this.renderer.symbol = new SimpleFillSymbol();\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [5, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([107.777, 29.809], 7);\n            });\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            this.featureLayer.zoom = [this.option.minZoom, this.option.maxZoom];\n            this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic, GraphicLayer,\n    Label,\n    Point, Polyline, SimpleFillSymbol, SimpleLineSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-graphic',\n    templateUrl: './graphic.component.html',\n    styleUrls: ['./graphic.component.scss']\n})\nexport class GraphicComponent implements OnInit {\n\n    option = {\n        latVisible: true,\n        lngVisible: true,\n        pointVisible: true\n    };\n\n    map: any;\n\n    latLayer: any;\n    lngLayer: any;\n    pointLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n\n        //画经线\n        const lngSymbol = new SimpleLineSymbol();\n        lngSymbol.strokeStyle = \"#0000ff\";\n        this.lngLayer = new GraphicLayer();\n        this.map.addLayer(this.lngLayer);\n        for (let i = -180; i <= 180; i = i + 10){\n            const line = new Polyline([[i, -80], [i, 80]]);\n            const graphic = new Graphic(line, lngSymbol);\n            this.lngLayer.add(graphic);\n        }\n        //画纬线\n        const latSymbol = new SimpleLineSymbol();\n        latSymbol.strokeStyle = \"#4d9221\";\n        this.latLayer = new GraphicLayer();\n        this.map.addLayer(this.latLayer);\n        for (let j = -80; j <= 80; j = j + 10){\n            const line = new Polyline([[-180, j], [180, j]]);\n            const graphic = new Graphic(line, latSymbol);\n            this.latLayer.add(graphic);\n        }\n        //画经纬线交点\n        const pointSymbol = new SimplePointSymbol();\n        pointSymbol.radius = 5;\n        pointSymbol.fillStyle = \"#de77ae\";\n        pointSymbol.strokeStyle = \"#c51b7d\";\n        this.pointLayer = new GraphicLayer();\n        this.map.addLayer(this.pointLayer);\n        for (let i = -180; i <= 180; i = i + 10){\n            for (let j = -90; j <= 90; j = j + 10){\n                const point = new Point(i, j);\n                const graphic = new Graphic(point, pointSymbol);\n                this.pointLayer.add(graphic);\n            }\n        }\n        this.map.setView([0, 0], 3);\n    }\n\n    change() {\n        if (this.lngLayer && this.latLayer && this.pointLayer) {\n            this.lngLayer.visible = this.option.lngVisible;\n            this.latLayer.visible = this.option.latVisible;\n            this.pointLayer.visible = this.option.pointVisible;\n            this.map.redraw();\n        }\n    }\n\n}\n"]}