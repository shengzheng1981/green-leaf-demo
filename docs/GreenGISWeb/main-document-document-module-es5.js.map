{"version":3,"sources":["webpack:///src/app/main/document/document.component.ts","webpack:///src/app/main/document/document.component.scss","webpack:///src/app/main/document/document.module.ts","webpack:///src/app/main/document/document.component.html"],"names":["DocumentComponent","configService","router","http","docs","get","subscribe","data","doc","article","headers","set","responseType","markdown","nativeElement","innerHTML","marked","selector","template","routes","path","component","DocumentModule","imports","forChild","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAYaA,iBAAiB;AAI1B,mCAAmBC,aAAnB,EAAwDC,MAAxD,EAAgFC,IAAhF,EAAkG;AAAA;;AAA/E,eAAAF,aAAA,GAAAA,aAAA;AAAqC,eAAAC,MAAA,GAAAA,MAAA;AAAwB,eAAAC,IAAA,GAAAA,IAAA;AAFhF,eAAAC,IAAA,GAAY,EAAZ;AAGC;;AALyB;AAAA;AAAA,iBAO1B,oBAAQ;AAAA;;AACJ,iBAAKD,IAAL,CAAUE,GAAV,CAAc,uBAAd,EAAuCC,SAAvC,CAAkD,UAAAC,IAAI;AAAA,qBAAI,KAAI,CAACH,IAAL,GAAYG,IAAhB;AAAA,aAAtD;AAEH;AAVyB;AAAA;AAAA,iBAY1B,gBAAOC,GAAP,EAAY;AAAA;;AACR,iBAAKC,OAAL,GAAeD,GAAf;AACA,gBAAME,OAAO,GAAG,IAAI,gEAAJ,GAAkBC,GAAlB,CAAsB,cAAtB,EAAsC,2BAAtC,CAAhB;AACA,iBAAKR,IAAL,CAAUE,GAAV,CAAc,iBAAiBG,GAAG,CAACC,OAAnC,EAA4C;AAAEC,qBAAO,EAAPA,OAAF;AAAWE,0BAAY,EAAE;AAAzB,aAA5C,EAA8EN,SAA9E,CAAyF,UAAAC,IAAI,EAAI;AAC7F,oBAAI,CAACM,QAAL,CAAcC,aAAd,CAA4BC,SAA5B,GAAwCC,MAAM,CAACT,IAAD,CAA9C;AACH,aAFD;AAGH;AAlByB;;AAAA;AAAA,S;;;;gBAXtB;;gBAEA;;gBADA;;;;;;gBAWH,uD;AAAS,iBAAC,UAAD,EAAa;AAAC,sBAAO;AAAR,WAAb;;;AADDP,uBAAiB,6DAL7B,gEAAU;AACPiB,gBAAQ,EAAE,cADH;AAEPC,gBAAQ,EAAR,2EAFO;;AAAA,OAAV,CAK6B,GAAjBlB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMmB,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE;AAFf,OADmB,CAAvB;;UAiBaC,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAV1B,+DAAS;AACNC,eAAO,EAAE,CACL,6DAAWC,QAAX,EADK,EAEL,kEAFK,EAGL,6DAAaA,QAAb,CAAsBL,MAAtB,CAHK,CADH;AAMNM,oBAAY,EAAE,CACV,qEADU;AANR,OAAT,CAU0B,GAAdH,cAAc,CAAd;;;;;;;;;;;;;;;;ACvBb;AAAe;;;AAAA","file":"main-document-document-module-es5.js","sourcesContent":["import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\n\ndeclare var marked;\n\n@Component({\n    selector: 'app-document',\n    templateUrl: './document.component.html',\n    styleUrls: ['./document.component.scss']\n})\nexport class DocumentComponent implements OnInit {\n    @ViewChild('markdown', {static:true}) markdown: ElementRef;\n    docs: any = [];\n    article: any;\n    constructor(public configService: ConfigService, public router: Router, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n        this.http.get(\"assets/json/docs.json\").subscribe( data => this.docs = data);\n\n    }\n\n    change(doc) {\n        this.article = doc;\n        const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n        this.http.get(\"assets/docs/\" + doc.article, { headers, responseType: 'text'}).subscribe( data => {\n            this.markdown.nativeElement.innerHTML = marked(data);\n        });\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkb2N1bWVudC5jb21wb25lbnQuc2NzcyJ9 */\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\nimport {DocumentComponent} from \"./document.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DocumentComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        DocumentComponent\n    ]\n})\nexport class DocumentModule { }\n","export default \"<div class=\\\"system-content\\\">\\n    <div class=\\\"system-left\\\">\\n        <ul nz-menu nzMode=\\\"inline\\\">\\n            <ng-container *ngFor=\\\"let doc of docs\\\">\\n                <li nz-menu-item *ngIf=\\\"!doc.children\\\">{{doc.title}}</li>\\n                <li nz-submenu *ngIf=\\\"doc.children\\\" [nzTitle]=\\\"doc.title\\\">\\n                    <ul>\\n                        <li nz-menu-item *ngFor=\\\"let child of doc.children\\\" (click)=\\\"change(child)\\\">{{child.title}}</li>\\n                    </ul>\\n                </li>\\n            </ng-container>\\n        </ul>\\n    </div>\\n    <div class=\\\"system-body\\\" style=\\\"padding: 15px; display: grid; grid-gap: 10px; grid-template-columns: 1fr auto;\\\">\\n        <div #container class=\\\"system-body-article\\\" style=\\\"height: 100%; overflow-y: auto;\\\">\\n            <!--<article #markdown>\\n                <section id=\\\"Start\\\" style=\\\"height: 400px;\\\">\\n                    <h3>Start</h3>\\n                </section>\\n                <section id=\\\"Index\\\" style=\\\"height: 400px;\\\">\\n                    <h3>Index</h3>\\n                </section>\\n                <section id=\\\"Command\\\" style=\\\"height: 400px;\\\">\\n                    <h3>Command</h3>\\n                </section>\\n                <section id=\\\"Remark\\\" style=\\\"height: 400px;\\\">\\n                    <h3>Remark</h3>\\n                </section>\\n            </article>-->\\n            <div #markdown>\\n\\n            </div>\\n        </div>\\n        <div class=\\\"system-body-anchor\\\">\\n            <!--<nz-anchor [nzContainer]=\\\"markdown\\\">\\n                <nz-link nzHref=\\\"document#Start\\\" nzTitle=\\\"Start\\\"></nz-link>\\n                <nz-link nzHref=\\\"document#Index\\\" nzTitle=\\\"Index\\\"></nz-link>\\n                <nz-link nzHref=\\\"document#Command\\\" nzTitle=\\\"Command\\\"></nz-link>\\n                <nz-link nzHref=\\\"document#Remark\\\" nzTitle=\\\"Remark\\\"></nz-link>\\n            </nz-anchor>-->\\n        </div>\\n    </div>\\n</div>\\n\";"]}