{"version":3,"sources":["./src/app/main/symbol/symbol.module.ts","./src/app/main/symbol/marker.component.html","./src/app/main/symbol/letter.component.ts","./src/app/main/symbol/arrow.component.html","./src/app/main/symbol/arrow.component.ts","./src/app/main/symbol/point.component.ts","./src/app/main/symbol/point.component.html","./src/app/main/symbol/letter.component.html","./src/app/main/symbol/custom.component.ts","./src/app/main/symbol/point.component.scss","./src/app/main/symbol/custom.component.html","./src/app/main/symbol/marker.component.ts","./src/app/main/symbol/marker.component.scss","./src/app/main/symbol/arrow.component.scss","./src/app/main/symbol/custom.component.scss","./src/app/main/symbol/letter.component.scss"],"names":[],"mappings":"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","file":"main-symbol-symbol-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\n\nimport {PointComponent} from \"./point.component\";\nimport {MarkerComponent} from \"./marker.component\";\nimport {LetterComponent} from \"./letter.component\";\nimport {ArrowComponent} from \"./arrow.component\";\nimport {CustomComponent} from \"./custom.component\";\n\nconst routes: Routes = [\n    {\n        path: 'point',\n        component: PointComponent\n    },\n    {\n        path: 'marker',\n        component: MarkerComponent\n    },\n    {\n        path: 'letter',\n        component: LetterComponent\n    },\n    {\n        path: 'arrow',\n        component: ArrowComponent\n    },\n    {\n        path: 'custom',\n        component: CustomComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        PointComponent, MarkerComponent, LetterComponent, ArrowComponent, CustomComponent\n    ]\n})\nexport class SymbolModule {\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">宽度：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"width\\\" [(ngModel)]=\\\"option.width\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"4\\\" [max]=\\\"64\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">高度：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"height\\\" [(ngModel)]=\\\"option.height\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"4\\\" [max]=\\\"64\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">X偏移：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"offsetX\\\" [(ngModel)]=\\\"option.offsetX\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"-64\\\" [max]=\\\"64\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">Y偏移：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"offsetY\\\" [(ngModel)]=\\\"option.offsetY\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"-64\\\" [max]=\\\"64\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label, LetterSymbol,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-letter',\n    templateUrl: './letter.component.html',\n    styleUrls: ['./letter.component.scss']\n})\nexport class LetterComponent implements OnInit {\n\n    option = {\n        lng: 116.397411,\n        lat: 39.909186,\n        strokeStyle: \"#ffffff\",\n        fillStyle: \"#ff0000\",\n        fontColor: \"#ffffff\",\n        fontSize: 12,\n        radius: 10,\n        letter: \"A\"\n    };\n\n    map: any;\n\n    symbol: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.symbol = new LetterSymbol();\n        this.symbol.strokeStyle = this.option.strokeStyle;\n        this.symbol.fillStyle = this.option.fillStyle;\n        this.symbol.fontColor = this.option.fontColor;\n        this.symbol.fontSize = this.option.fontSize;\n        this.symbol.radius = this.option.radius;\n        this.symbol.letter = this.option.letter;\n        const point = new Point(this.option.lng, this.option.lat);\n        const graphic = new Graphic(point, this.symbol);\n        this.map.addGraphic(graphic);\n        this.map.setView([this.option.lng, this.option.lat], 12);\n    }\n\n    change() {\n        if (this.symbol) {\n            this.symbol.strokeStyle = this.option.strokeStyle;\n            this.symbol.fillStyle = this.option.fillStyle;\n            this.symbol.fontColor = this.option.fontColor;\n            this.symbol.fontSize = this.option.fontSize;\n            this.symbol.radius = this.option.radius;\n            this.symbol.letter = this.option.letter;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">线宽：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"lineWidth\\\" [(ngModel)]=\\\"option.lineWidth\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"1\\\" [max]=\\\"8\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">翼长：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"arrowLength\\\" [(ngModel)]=\\\"option.arrowLength\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"4\\\" [max]=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\" nz-tooltip nzTitle=\\\"显示箭头的最短线长\\\">最短线长：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"minLength\\\" [(ngModel)]=\\\"option.minLength\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"30\\\" [max]=\\\"100\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    ArrowSymbol,\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-arrow',\n    templateUrl: './arrow.component.html',\n    styleUrls: ['./arrow.component.scss']\n})\nexport class ArrowComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        lineWidth: 3,\n        minLength: 50,\n        arrowLength: 10,\n        arrowAngle: Math.PI / 6\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/pipe.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Polyline);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                this.renderer = new SimpleRenderer();\n                const symbol = new ArrowSymbol();\n                symbol.lineWidth = this.option.lineWidth;\n                symbol.strokeStyle = this.option.strokeStyle;\n                symbol.minLength = this.option.minLength;\n                symbol.arrowLength = this.option.arrowLength;\n                this.renderer.symbol = symbol;\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            this.renderer.symbol.lineWidth = this.option.lineWidth;\n            this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            this.renderer.symbol.minLength = this.option.minLength;\n            this.renderer.symbol.arrowLength = this.option.arrowLength;\n            this.map.redraw();\n        }\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-point',\n    templateUrl: './point.component.html',\n    styleUrls: ['./point.component.scss']\n})\nexport class PointComponent implements OnInit {\n\n    option = {\n        visible: true,\n        strokeStyle: \"#ff0000\",\n        fillStyle: \"#ff0000\",\n        radius: 6\n    };\n\n    map: any;\n\n    renderer: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                this.renderer = new SimpleRenderer();\n                this.renderer.symbol = new SimplePointSymbol();\n                this.featureLayer.renderer = this.renderer;\n                this.featureLayer.zoom = [7, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    change() {\n        if (this.featureLayer && this.renderer) {\n            this.featureLayer.visible = this.option.visible;\n            this.renderer.symbol.radius = this.option.radius;\n            this.renderer.symbol.strokeStyle = this.option.strokeStyle;\n            this.renderer.symbol.fillStyle = this.option.fillStyle;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">显示：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.visible\\\" (ngModelChange)=\\\"change()\\\"></nz-switch>\\n                </div>\\n                <div class=\\\"input-group\\\"></div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"radius\\\" [(ngModel)]=\\\"option.radius\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"4\\\" [max]=\\\"16\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体颜色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fontColor\\\" [(ngModel)]=\\\"option.fontColor\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字体大小：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"fontSize\\\" [(ngModel)]=\\\"option.fontSize\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"8\\\" [max]=\\\"18\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"radius\\\" [(ngModel)]=\\\"option.radius\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"4\\\" [max]=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">字母：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"string\\\" name=\\\"letter\\\" [(ngModel)]=\\\"option.letter\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label, LetterSymbol,\n    Point, PointSymbol, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-custom',\n    templateUrl: './custom.component.html',\n    styleUrls: ['./custom.component.scss']\n})\nexport class CustomComponent implements OnInit {\n\n    option = {\n        lng: 116.397411,\n        lat: 39.909186,\n        strokeStyle: \"#ffffff\",\n        fillStyle: \"#ff0000\",\n        radius: 10,\n        sides: 4\n    };\n\n    map: any;\n\n    symbol: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.symbol = new ShapeSymbol();\n        this.symbol.strokeStyle = this.option.strokeStyle;\n        this.symbol.fillStyle = this.option.fillStyle;\n        this.symbol.radius = this.option.radius;\n        this.symbol.sides = this.option.sides;\n        const point = new Point(this.option.lng, this.option.lat);\n        const graphic = new Graphic(point, this.symbol);\n        this.map.addGraphic(graphic);\n        this.map.setView([this.option.lng, this.option.lat], 12);\n    }\n\n    change() {\n        if (this.symbol) {\n            this.symbol.strokeStyle = this.option.strokeStyle;\n            this.symbol.fillStyle = this.option.fillStyle;\n            this.symbol.radius = this.option.radius;\n            this.symbol.sides = this.option.sides;\n            this.map.redraw();\n        }\n    }\n\n}\n\nexport class ShapeSymbol extends PointSymbol{\n    public radius: number = 6;\n    public sides: number = 4;\n\n    draw(ctx: CanvasRenderingContext2D, screenX, screenY) {\n        ctx.save();\n        //keep size\n        //地理坐标 转回 屏幕坐标\n        ctx.setTransform(1,0,0,1,0,0);\n        ctx.lineWidth = this.lineWidth;\n        ctx.strokeStyle = this.strokeStyle;\n        ctx.fillStyle = this.fillStyle;\n        ctx.lineWidth = this.lineWidth;\n        ctx.beginPath(); //Start path\n        //ctx.arc(screenX, screenY, this.radius, 0, Math.PI * 2, true);\n        ctx.moveTo(screenX, screenY - this.radius);\n        for (let i = 1; i < this.sides; i++) {\n            let rad = 2 * Math.PI / this.sides * i;\n            ctx.lineTo(screenX + this.radius * Math.sin(rad), screenY - this.radius * Math.cos(rad));\n        }\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n        ctx.restore();\n    }\n\n    contain(anchorX, anchorY, screenX, screenY) {\n        return Math.sqrt((anchorX - screenX) *  (anchorX - screenX) +  (anchorY - screenY) *  (anchorY - screenY)) <= this.radius;\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2ludC5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\" *ngIf=\\\"option\\\">\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边框色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"strokeColor\\\" [(ngModel)]=\\\"option.strokeStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">填充色：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"color\\\" name=\\\"fillColor\\\" [(ngModel)]=\\\"option.fillStyle\\\"  (ngModelChange)=\\\"change()\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">半径：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"radius\\\" [(ngModel)]=\\\"option.radius\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"4\\\" [max]=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n                <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-addon\\\">边数：</div>\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"sides\\\" [(ngModel)]=\\\"option.sides\\\"  autocomplete=\\\"off\\\" (ngModelChange)=\\\"change()\\\" min=\\\"3\\\" [max]=\\\"20\\\" step=\\\"1\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleFillSymbol, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-marker',\n    templateUrl: './marker.component.html',\n    styleUrls: ['./marker.component.scss']\n})\nexport class MarkerComponent implements OnInit {\n\n    option = {\n        lng: 116.397411,\n        lat: 39.909186,\n        width: 32,\n        height: 32,\n        offsetX: -16,\n        offsetY: -32,\n        url: \"assets/img/marker.svg\"\n    };\n\n    map: any;\n\n    marker: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.marker = new SimpleMarkerSymbol();\n        this.marker.width = 32;\n        this.marker.height = 32;\n        this.marker.offsetX = -16;\n        this.marker.offsetY = -32;\n        this.marker.url = \"assets/img/marker.svg\";\n        await this.marker.load();\n        const point = new Point(this.option.lng, this.option.lat);\n        const graphic = new Graphic(point, this.marker);\n        this.map.addGraphic(graphic);\n        this.map.setView([this.option.lng, this.option.lat], 12);\n    }\n\n    change() {\n        if (this.marker) {\n            this.marker.width = this.option.width;\n            this.marker.height = this.option.height;\n            this.marker.offsetX = this.option.offsetX;\n            this.marker.offsetY = this.option.offsetY;\n            this.marker.url = this.option.url;\n            this.map.redraw();\n        }\n    }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYXJrZXIuY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcnJvdy5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjdXN0b20uY29tcG9uZW50LnNjc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsZXR0ZXIuY29tcG9uZW50LnNjc3MifQ== */\";"],"sourceRoot":"webpack:///"}