{"version":3,"sources":["webpack:///src/app/main/cluster/cluster.component.html","webpack:///src/app/main/cluster/cluster.component.scss","webpack:///src/app/main/cluster/cluster.component.ts","webpack:///src/app/main/cluster/cluster.module.ts"],"names":["ClusterComponent","router","configService","http","option","cluster","event","map","get","subscribe","data","featureClass","Point","loadGeoJSON","featureLayer","renderer","zoom","addLayer","setView","redraw","selector","template","routes","path","component","ClusterModule","imports","forChild","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBFA,gBAAgB;AASzB,kCAAoBC,MAApB,EAA2CC,aAA3C,EAAiFC,IAAjF,EAAmG;AAAA;;AAA/E,eAAAF,MAAA,GAAAA,MAAA;AAAuB,eAAAC,aAAA,GAAAA,aAAA;AAAsC,eAAAC,IAAA,GAAAA,IAAA;AAPjF,eAAAC,MAAA,GAAS;AACLC,mBAAO,EAAE;AADJ,WAAT;AAQC;;AAVwB;AAAA;AAAA,iBAYzB,oBAAQ,CAEP,CAdwB,CAgBzB;;AAhByB;AAAA;AAAA,iBAiBnB,iBAAQC,KAAR,EAAe;;;;;;;;AACjB,2BAAKC,GAAL,GAAWD,KAAK,CAACC,GAAjB;AACA,2BAAKJ,IAAL,CAAUK,GAAV,CAAc,8BAAd,EACKC,SADL,CACe,UAACC,IAAD,EAAe;AACtB,4BAAMC,YAAY,GAAG,IAAI,sDAAJ,CAAiB,uDAAaC,KAA9B,CAArB;AACAD,oCAAY,CAACE,WAAb,CAAyBH,IAAzB;AACA,6BAAI,CAACI,YAAL,GAAoB,IAAI,sDAAJ,EAApB;AACA,6BAAI,CAACA,YAAL,CAAkBH,YAAlB,GAAiCA,YAAjC;AACA,4BAAMI,QAAQ,GAAG,IAAI,wDAAJ,EAAjB;AACA,6BAAI,CAACD,YAAL,CAAkBT,OAAlB,GAA4B,KAAI,CAACD,MAAL,CAAYC,OAAxC;AACA,6BAAI,CAACS,YAAL,CAAkBC,QAAlB,GAA6BA,QAA7B;AACA,6BAAI,CAACD,YAAL,CAAkBE,IAAlB,GAAyB,CAAC,EAAD,EAAK,EAAL,CAAzB;;AACA,6BAAI,CAACT,GAAL,CAASU,QAAT,CAAkB,KAAI,CAACH,YAAvB;;AACA,6BAAI,CAACP,GAAL,CAASW,OAAT,CAAiB,CAAC,OAAD,EAAU,MAAV,CAAjB,EAAoC,EAApC;AACH,uBAZL;;;;;;;;;AAaH;AAhCwB;AAAA;AAAA,iBAkCzB,mBAAS;AACL,gBAAI,KAAKJ,YAAT,EAAuB;AACnB,mBAAKA,YAAL,CAAkBT,OAAlB,GAA4B,KAAKD,MAAL,CAAYC,OAAxC;AACA,mBAAKE,GAAL,CAASY,MAAT;AACH;AACJ;AAvCwB;;AAAA;AAAA,S;;;;gBAlBrB;;gBADA;;gBAYA;;;;AAOKnB,sBAAgB,6DAL5B,gEAAU;AACPoB,gBAAQ,EAAE,aADH;AAEPC,gBAAQ,EAAR,0EAFO;;AAAA,OAAV,CAK4B,GAAhBrB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdb,UAAMsB,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AAEIC,iBAAS,EAAE;AAFf,OADmB,CAAvB;;UAiBaC,aAAa;AAAA;AAAA,O;;AAAbA,mBAAa,6DAVzB,+DAAS;AACNC,eAAO,EAAE,CACL,6DAAWC,QAAX,EADK,EAEL,kEAFK,EAGL,6DAAaA,QAAb,CAAsBL,MAAtB,CAHK,CADH;AAMNM,oBAAY,EAAE,CACV,mEADU;AANR,OAAT,CAUyB,GAAbH,aAAa,CAAb","file":"main-cluster-cluster-module-es5.js","sourcesContent":["export default \"<div class=\\\"system-content\\\" style=\\\"grid-template-columns: 1fr\\\">\\n    <div class=\\\"system-body\\\" >\\n        <green-map-control (mapInit)=\\\"mapInit($event)\\\"></green-map-control>\\n        <div class=\\\"panel\\\" style=\\\"position: absolute; top: 15px; right: 15px; z-index: 1000;\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <div class=\\\"panel-title\\\">配置</div>\\n            </div>\\n            <div class=\\\"panel-body\\\" style=\\\"display: grid; grid-template-columns: 1fr 1fr; grid-gap: 10px; width: 540px\\\">\\n                <div class=\\\"input-group\\\" style=\\\"text-align: center;\\\">\\n                    <div class=\\\"input-group-addon\\\">聚合：</div>\\n                    <nz-switch class=\\\"form-control\\\" [(ngModel)]=\\\"option.cluster\\\" (ngModelChange)=\\\"switch()\\\"></nz-switch>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjbHVzdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import {Component, OnInit} from '@angular/core';\nimport {ConfigService} from \"../../core/config.service\";\nimport {Router} from \"@angular/router\";\nimport {\n    Feature,\n    FeatureClass,\n    FeatureLayer, Field,\n    GeometryType, Graphic,\n    Label,\n    Point, SimpleMarkerSymbol,\n    SimplePointSymbol, SimpleRenderer,\n    SimpleTextSymbol\n} from \"green-gis\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-cluster',\n    templateUrl: './cluster.component.html',\n    styleUrls: ['./cluster.component.scss']\n})\nexport class ClusterComponent implements OnInit {\n\n    option = {\n        cluster: true\n    };\n\n    map: any;\n    featureLayer: any;\n\n    constructor(private router: Router, public configService: ConfigService, private http: HttpClient) {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    /////////////////以下界面交互/////////////////////\n    async mapInit(event) {\n        this.map = event.map;\n        this.http.get(\"assets/geojson/junction.json\")\n            .subscribe((data :any) => {\n                const featureClass = new FeatureClass(GeometryType.Point);\n                featureClass.loadGeoJSON(data);\n                this.featureLayer = new FeatureLayer();\n                this.featureLayer.featureClass = featureClass;\n                const renderer = new SimpleRenderer();\n                this.featureLayer.cluster = this.option.cluster;\n                this.featureLayer.renderer = renderer;\n                this.featureLayer.zoom = [13, 20];\n                this.map.addLayer(this.featureLayer);\n                this.map.setView([109.519, 18.271], 13);\n            });\n    }\n\n    switch() {\n        if (this.featureLayer) {\n            this.featureLayer.cluster = this.option.cluster;\n            this.map.redraw();\n        }\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {ClusterComponent} from './cluster.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {CoreModule} from \"../../core/core.module\";\nimport {SharedModule as MainSharedModule} from \"../shared/shared.module\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ClusterComponent\n    }\n];\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MainSharedModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        ClusterComponent\n    ]\n})\nexport class ClusterModule {\n}\n"]}